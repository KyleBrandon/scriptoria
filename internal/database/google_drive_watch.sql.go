// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: google_drive_watch.sql

package database

import (
	"context"
)

const createGoogleDriveWatch = `-- name: CreateGoogleDriveWatch :one
INSERT INTO google_drive_watch (
    channel_id, resource_id, expires_at, webhook_url
) VALUES ( $1, $2, $3, $4)
RETURNING id, created_at, updated_at, channel_id, resource_id, expires_at, webhook_url
`

type CreateGoogleDriveWatchParams struct {
	ChannelID  string
	ResourceID string
	ExpiresAt  int64
	WebhookUrl string
}

func (q *Queries) CreateGoogleDriveWatch(ctx context.Context, arg CreateGoogleDriveWatchParams) (GoogleDriveWatch, error) {
	row := q.db.QueryRowContext(ctx, createGoogleDriveWatch,
		arg.ChannelID,
		arg.ResourceID,
		arg.ExpiresAt,
		arg.WebhookUrl,
	)
	var i GoogleDriveWatch
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ChannelID,
		&i.ResourceID,
		&i.ExpiresAt,
		&i.WebhookUrl,
	)
	return i, err
}

const getLatestGoogleDriveWatch = `-- name: GetLatestGoogleDriveWatch :one
SELECT id, created_at, updated_at, channel_id, resource_id, expires_at, webhook_url FROM google_drive_watch
ORDER BY created_at DESC
LIMIT 1
`

func (q *Queries) GetLatestGoogleDriveWatch(ctx context.Context) (GoogleDriveWatch, error) {
	row := q.db.QueryRowContext(ctx, getLatestGoogleDriveWatch)
	var i GoogleDriveWatch
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ChannelID,
		&i.ResourceID,
		&i.ExpiresAt,
		&i.WebhookUrl,
	)
	return i, err
}
